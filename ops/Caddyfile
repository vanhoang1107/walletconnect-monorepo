{
	email {env.EMAIL}
	admin off
	order rate_limit before reverse_proxy
	acme_dns cloudflare {env.CLOUDFLARE_TOKEN}
}

(certificates) {
	tls {
		dns cloudflare {env.CLOUDFLARE_TOKEN}
	}
}

(common) {
	# This rate_limit option is tighly coupled with Cloudflare.
	# If we don't use the cloudflare proxy we won't get
	# a X-Forwaded-For header, making rate limiting useless
	rate_limit {header.X-Forwarded-For} 10r/s 1000000
	log {
		output stdout
		format json
		level {env.LOG_LEVEL}
	}
	@websockets {
		header Connection *Upgrade*
		header Upgrade websocket
	}
	reverse_proxy @websockets {args.0}:{env.UPSTREAM_PORT}
	reverse_proxy {args.0}:{env.UPSTREAM_PORT}
}

{env.DOMAIN} {
	import certificates
	import common relay.1
}

grafana.{env.DOMAIN} {
	import certificates
	handle {
		header Access-Control-Allow-Methods "GET"
		header Access-Control-Allow-Origin grafana.{env.DOMAIN}
		root * /www
		file_server
		templates
	}

	handle_path /dash* {
		reverse_proxy grafana:3000
	}
}

:9321 {
	metrics /metrics
}
